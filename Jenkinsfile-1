pipeline {
   agent any
   
   // Commenting tools section since running locally on Windows
   // tools {
   //     maven 'Maven-3.9.0'
   //     jdk 'JDK-17'
   // }

   environment {
       SONAR_TOKEN = credentials('sonar-token')   // Jenkins credential for SonarQube token
       SONAR_HOST_URL = 'http://192.168.1.134:9000'  // Replace with your machine IP (not localhost)
   }

   stages {
       stage('Checkout') {
           steps {
               git branch: 'main',
                   url: 'https://github.com/your-org/your-repo.git'
           }
       }

       stage('Build & Test') {
           steps {
               bat 'mvn clean install'
           }
       }

       stage('SonarQube Analysis') {
           steps {
               withSonarQubeEnv('MySonarQubeDocker') {  // Must match Jenkins SonarQube config
                   bat """
                       mvn sonar:sonar ^
                         -Dsonar.projectKey=my-java-app ^
                         -Dsonar.projectName="Java App with Docker SonarQube" ^
                         -Dsonar.host.url=%SONAR_HOST_URL% ^
                         -Dsonar.login=%SONAR_TOKEN%
                   """
               }
           }
       }

       stage('Quality Gate') {
           steps {
               echo "Waiting for SonarQube Quality Gate..."
               timeout(time: 5, unit: 'MINUTES') {
                   waitForQualityGate abortPipeline: true
               }
           }
       }
   }

   post {
       success {
           echo '✅ Build and SonarQube Quality Gate passed!'
       }
       failure {
           echo '❌ Build failed or Quality Gate not met!'
       }
   }
}
