pipeline {
    agent any

    // Commenting tools section since running locally on Windows
    // tools {
    //     maven 'Maven-3.9.0'
    //     jdk 'JDK-17'
    // }

    environment {
        SONAR_TOKEN   = credentials('sonar-token')   // Jenkins credential ID for SonarQube token
        SCANNER_HOME  = tool 'SonarScanner'          // Jenkins SonarScanner tool
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master',
                    url: 'https://github.com/sunil1423/Maven_Sample_Project1.git'
            }
        }

        stage('Build & Test') {
            steps {
                bat 'mvn clean install'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('MySonarQube') {   // Must match Jenkins SonarQube config name
                    bat """
                        %SCANNER_HOME%\\bin\\sonar-scanner ^
                          -Dsonar.projectKey=my-java-project-${env.BRANCH_NAME} ^
                          -Dsonar.projectName=MyJavaProject-${env.BRANCH_NAME} ^
                          -Dsonar.sources=src/main/java ^
                          -Dsonar.java.binaries=target/classes ^
                          -Dsonar.login=%SONAR_TOKEN%
                    """
                }
            }
        }

        stage('Quality Gate') {
            steps {
                echo "Waiting for SonarQube Quality Gate..."
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
    }

    post {
        success {
            echo '✅ Build and SonarQube Quality Gate passed!'
        }
        failure {
            echo '❌ Build failed or Quality Gate not met!'
        }
    }
}
